{"version":3,"sources":["components/Statistics/Statictics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedBackOptions/FeedbackOptions.styled.jsx","components/FeedBackOptions/FeedbackOptions.jsx","components/Sections/Section.styled.jsx","components/Sections/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","components/App.js","index.js"],"names":["Text","styled","p","Green","span","Orange","Red","BigNumbers","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Title","h2","Section","title","children","Notification","message","Feedback","state","handleIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAOC,IAAOC,EAAV,iGAOJC,EAAQF,IAAOG,KAAV,2CAGLC,EAASJ,IAAOG,KAAV,4CAGNE,EAAML,IAAOG,KAAV,yCAIHG,EAAaN,IAAOG,KAAV,8C,OCLRI,EAVI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,mBAA1B,OACf,gCACA,eAACb,EAAD,oBAAY,cAACO,EAAD,UAAY,cAACJ,EAAD,UAAQM,SAChC,eAACT,EAAD,uBAAe,cAACO,EAAD,UAAY,cAACF,EAAD,UAASK,SACpC,eAACV,EAAD,mBAAW,cAACO,EAAD,UAAY,cAACD,EAAD,UAAMK,SAC7B,eAACX,EAAD,qBAAa,cAACO,EAAD,UAAaK,OAC1B,eAACZ,EAAD,iCAAyB,eAACO,EAAD,WAAaM,EAAb,cCRhBC,EAASb,IAAOc,OAAV,kMCQJC,EALS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpBD,EAAQE,KAAI,SAACC,GAAD,OACT,cAACN,EAAD,CAAQO,KAAK,SAAsBC,QAAU,kBAAIJ,EAAgBE,IAAjE,SAA2EA,GAAhDA,OCLrBG,EAAQtB,IAAOuB,GAAV,mGCSHC,EAPC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,qCACA,cAACJ,EAAD,UAAQG,IACR,8BAAMC,QCLG3B,EAAOC,IAAOC,EAAV,+FCKF0B,EAHM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,cAAC,EAAD,UAAOA,KC2CIC,E,4MAzCXC,MAAQ,CACJtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAITqB,gBAAkB,SAACZ,GACb,EAAKa,UAAS,SAAAC,GACV,OAAO,eACFd,EAASc,EAAUd,GAAU,O,EAI5Ce,mBAAqB,WACjB,MAA6B,EAAKJ,MAC3B,OADP,EAAOtB,KAAP,EAAaE,IAAb,EAAkBD,S,EAItB0B,gCAAkC,WAC9B,MAA6B,EAAKL,MAA3BtB,EAAP,EAAOA,KACDG,EAAQH,EADd,EAAaE,IAAb,EAAkBD,QAEd,OAAO2B,KAAKC,MAAa,IAAP7B,EAAWG,I,4CAGrC,WACI,MAA8B2B,KAAKR,MAA3BtB,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACjB,OACI,gCACF,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACA,cAAC,EAAD,CAAiBT,QAAS,CAAC,OAAQ,MAAO,WAAYC,gBAAiBqB,KAAKP,oBAE3EvB,GAAQE,GAAOD,EAAU,EAAK,cAAC,EAAD,CAASgB,MAAM,YAAf,SAC/B,cAAC,EAAD,CAAYjB,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO2B,KAAKJ,qBAAsBtB,mBAAoB0B,KAAKH,sCACnG,cAAC,EAAD,CAAcP,QAAQ,6B,GAnCvBW,aCGRC,MANf,WACE,OACI,cAAC,EAAD,KCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0efd018.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\npadding: 10px;\nfont-size: 24px;\ncolor: black;\nfont-weight: bold;\n`;\n\nexport const Green = styled.span`\ncolor: Green;\n`;\nexport const Orange = styled.span`\ncolor: orange;\n`;\nexport const Red = styled.span`\ncolor: red;\n`;\n\nexport const BigNumbers = styled.span`\nfont-size: 34px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Text, Green, Orange, Red, BigNumbers} from './Statictics.styled'\n\nconst Statistics = ({good,neutral,bad,total, positivePercentage}) => (\n    <div>\n    <Text>Good: <BigNumbers><Green>{good}</Green></BigNumbers></Text>\n    <Text>Neutral: <BigNumbers><Orange>{neutral}</Orange></BigNumbers></Text>\n    <Text>Bad: <BigNumbers><Red>{bad}</Red></BigNumbers></Text>\n    <Text>Total: <BigNumbers>{total}</BigNumbers></Text>\n    <Text>Positive feedback: <BigNumbers>{positivePercentage}%</BigNumbers></Text>\n</div>\n)\n\nexport default Statistics;\n\n\nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n}","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\npadding: 24px;\nmargin-left: 15px;\nbackground-color: pink;\nfont-size: 24px;\nborder-radius: 15px;\ncolor: black;\nfont-weight: bold;\n&:hover {\n  color: grey;\n}\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button} from '../FeedBackOptions/FeedbackOptions.styled';\n\n\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\n    options.map((option)=> (\n       <Button type=\"button\" key={option} onClick= {()=>onLeaveFeedback(option)}>{option}</Button>\n    )))\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array,\n    onLeaveFeedback: PropTypes.func,\n}          ","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\npadding: 24px;\nfont-size: 34px;\ncolor: black;\nfont-weight: bold;\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Title} from '../Sections/Section.styled';\n\nconst Section = ({title, children})=> (\n    <>\n    <Title>{title}</Title>\n    <div>{children}</div>\n</>\n)\n\nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.element,\n}","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\npadding: 24px;\nfont-size: 24px;\ncolor: red;\nfont-weight: bold;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Text} from './Notification.styled';\n\nconst Notification = ({message}) => (\n    <Text>{message}</Text>\n)\nexport default Notification;\n\nNotification.propTypes = {\n    message: PropTypes.string\n}","import React, {Component} from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedBackOptions/FeedbackOptions';\nimport Section from '../Sections/Section';\nimport Notification from '../Notification/Notification';\n\nclass Feedback extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n     \n      }\n\n    handleIncrement = (option) => {\n          this.setState(prevState => {\n              return {\n                  [option]: prevState[option] + 1,\n              }})\n      }\n\n    countTotalFeedback = () => {\n        const {good, bad, neutral} = this.state;\n               return  good + bad + neutral\n        }\n    \n    countPositiveFeedbackPercentage = () => {\n        const {good, bad, neutral} = this.state;\n        const total = good+bad+neutral\n            return Math.round(good * 100/total)\n    }\n\n    render() {\n        const  {good, bad, neutral} = this.state;\n          return (\n              <div>\n            <Section title=\"Please leave feedback\">\n            <FeedbackOptions options={['good', 'bad', 'neutral']} onLeaveFeedback={this.handleIncrement}/>\n            </Section>\n            {good || bad || neutral > 0 ?  <Section title=\"Statistic\"> \n            <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}/>\n           </Section> : <Notification message=\"No feedback given\"></Notification>\n            }\n              </div>\n          );\n      }\n    }\n\nexport default Feedback;","\nimport Feedback from './Feedback/Feedback';\n\nfunction App() {\n  return (\n      <Feedback />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}